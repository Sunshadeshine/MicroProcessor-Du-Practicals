1. Write a program for 32-bit binary division and multiplication 
 32bit division(32 bit divident)64/32


.model small
.stack
.386
.data

ad dd ?
ad1 dd ?
msg db 13,10,"Enter the divisor(32 Bit): $"
msg1 db 13,10,"Enter the dividend(64 Bit): $"
msg2 db 13,10,"Quotient->$"

.code
.startup


;;input of 1st part of 64 bit dividend.

mov dx,offset msg
mov ah,09
int 21h

mov ebx,0
mov cx,4
abc: shl ebx,8

;1st DIGIT OF FIRST part.

mov ah,01
int 21h

cmp al,39h
jbe ab1

sub al,37h

ab1:
and al,00fh
shl al,4
mov bl,al

;2nd  DIGIT OF FIRST part.

mov ah,01
int 21h

cmp al,39h
jbe ab2

sub al,37h

ab2:
and al,00fh
add bl,al

loop abc

mov ad,ebx

;;input of 2nd part of 64 bit dividend.

mov dx,offset msg1
mov ah,09
int 21h

mov ebx,0
mov cx,4
abc1: shl ebx,8

;1st DIGIT OF SECOND PART.

mov ah,01
int 21h

cmp al,39h
jbe ab3

sub al,37h

ab3:
and al,00fh
shl al,4
mov bl,al

;2nd  DIGIT OF SECOND PART.

mov ah,01
int 21h

cmp al,39h
jbe ab4

sub al,37h

ab4:
and al,00fh
add bl,al

loop abc1

mov ad1,ebx

;;input of  divisor 32 bit no.

mov ebx,0
mov cx,4
abc2: shl ebx,8

;1st DIGIT OF FIRST NO.

mov ah,01
int 21h

cmp al,39h
jbe ab5

sub al,37h

ab5:
and al,00fh
shl al,4
mov bl,al

;2nd  DIGIT OF FIRST NO.

mov ah,01
int 21h

cmp al,39h
jbe ab6

sub al,37h

ab6:
and al,00fh
add bl,al

loop abc2

mov edx,ad
mov eax,ad1

div ebx

;;quotient

mov ad,edx

;;remainder

mov ad1,eax

;; printing of remainder

mov dx,offset msg2
mov ah,09
int 21h

mov ebx,ad1
mov cx,4

abc3 :rol ebx,8

mov al,bl
and al,0f0h
shr al,4
add al,30h

cmp al,39h

jbe ab7

add al,07h

ab7:
mov dl,al
mov ah,02
int 21h


mov al,bl
and al,00fh
add al,30h

cmp al,39h

jbe ab8

add al,07h

ab8:

mov dl,al
mov ah,02
int 21h

loop abc3



;; printing of quotient

mov ebx,ad
mov cx,4

abc4 :rol ebx,8

mov al,bl
and al,0f0h
shr al,4
add al,30h

cmp al,39h

jbe ab9

add al,07h

ab9:
mov dl,al
mov ah,02
int 21h


mov al,bl
and al,00fh
add al,30h

cmp al,39h

jbe ab10

add al,07h

ab10:

mov dl,al
mov ah,02
int 21h

loop abc4


.exit
end
